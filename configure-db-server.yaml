---
- hosts: all
  become: yes

  vars:
    db_user: vagrant
    db_password: vagrant
    db_name: parsing-site

  pre_tasks: 
    - name: "Install packages"
      yum: "name={{ item }} state=present"
      with_items:
        - postgresql
        - postgresql-server
        - python3-devel
        - postgresql-libs
        - postgresql-devel
        - python-psycopg2
      
  tasks:
    - name: "Find out if PostgreSQL is initialized"
      ansible.builtin.stat:
        path: "/var/lib/pgsql/data/pg_hba.conf"
      register: postgres_data

    - name: "Initialize PostgreSQL"
      shell: "postgresql-setup initdb"
      when: not postgres_data.stat.exists
 
    - name: "Start and enable services"
      service: "name={{ item }} state=started enabled=yes"
      with_items:
        - postgresql

    - name: "Allow md5 connection for the db user"
      shell: "echo 'host    all             all             0.0.0.0/0            md5' >> /var/lib/pgsql/data/pg_hba.conf"
      become: yes
      become_user: postgres
      notify: restart postgres
    
    - name: "Allow listen_address = *"
      shell: "echo `listen_addresses = '*'` >> /var/lib/pgsql/data/postgresql.conf"
      become: yes
      become_user: postgres
      notify: restart postgres

    - name: "Load SQL script into a variable"
      set_fact:
        migration_sql: "{{ lookup('file', './ddl_constructor.sql') }}"

    - name: "Execute script from variable"
      command: "psql -c {{ migration_sql }}"
      become_user: postgres
      register: sql_response_variable

  handlers:
    - name: restart postgres
      service: name=postgresql state=restarted
